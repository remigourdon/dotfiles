{{- if contains "home" .chezmoi.hostname }}
[user]
    name = {{ .home.name }}
    email = {{ .home.email }}
{{- else }}
[user]
    name = {{ .work.name }}
    email = {{ .work.email }}
{{- end }}
[core]
    pager = delta
    excludesfile = /home/remi/.gitignore_global
[init]
    defaultBranch = main
[interactive]
    diffFilter = delta --color-only
[filter "nbstripout"]
    clean = '/usr/bin/python3' -m nbstripout
    smudge = cat
[diff "ipynb"]
    textconv = '/usr/bin/python3' -m nbstripout -t
[fetch]
    prune = true
[pull]
    ff = only
[credential]
    helper = cache --timeout=3600
[alias]
    # Utils
    main-branch = !basename $(git symbolic-ref refs/remotes/origin/HEAD)
    gitignore-list = !curl -L -s "https://www.gitignore.io/api/list" | tr ',' '\n'
    fuzzy-index = !git -c color.status=always status --short | fzf --ansi -0 -m --preview 'bat --color=always {2}' | cut -c 4-

    # Basics
    s = status
    ll = log --all --decorate --graph
    l = ll --oneline
    d = diff
    aa = add .
    b = branch
    c = commit
    cm = commit --message
    cma = commit --all --message
    ca = commit --amend
    ri = rebase --interactive
    f = fetch
    w = worktree

    # Fuzzy
    a = ![ "${#}" -gt 0 ] && git add "${@}" || git fuzzy-index | xargs --no-run-if-empty git add
    ap = ![ "${#}" -gt 0 ] && git add --patch "${@}" || git fuzzy-index | xargs --no-run-if-empty --open-tty git add --patch
    bd = !,git-branches-filter -z -x | cut -d '\t' -f3 | xargs --no-run-if-empty git branch -D
    ch = !git branch --all | grep -Ev '(^\\*|HEAD)' | cut -c 3- | fzf -0 +m --preview='git log --color=always {} --' | sed "s#remotes/[^/]*/##" | xargs --no-run-if-empty git checkout
    chc = !git log --pretty=oneline --abbrev-commit --reverse | fzf -0 +m --preview='git show --color=always {1}' | cut -c -8 | xargs --no-run-if-empty git checkout
    ignore = !git gitignore-list | fzf --multi | paste -s -d, - | xargs --no-run-if-empty -I{} curl -L -s "https://www.gitignore.io/api/{}" | sed -n "/^###/,\\$p" > .gitignore
[filter "strip-notebook-output"]
clean = "jupyter nbconvert --ClearOutputPreprocessor.enabled=True --ClearMetadataPreprocessor.enabled=True --to=notebook --stdin --stdout --log-level=ERROR"
